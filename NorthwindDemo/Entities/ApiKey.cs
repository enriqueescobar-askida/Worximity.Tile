// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace NorthwindDemo.Entities
{

    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    // ApiKey
    [Table("ApiKey", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class ApiKey
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"ApiKeyId", Order = 1, TypeName = "bigint")]
        [Index(@"PK_AKE_ApiKeys", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Api key ID")]
        public long ApiKeyId { get; set; } // ApiKeyId (Primary key)

        [Column(@"Key", Order = 2, TypeName = "nvarchar")]
        [Index(@"IX_AKE_cApiKey", 1, IsUnique = true, IsClustered = false)]
        [Required]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Key")]
        public string Key { get; set; } // Key (length: 50)

        [Column(@"LastLogin", Order = 3, TypeName = "datetime")]
        [Required]
        [Display(Name = "Last login")]
        public System.DateTime LastLogin { get; set; } // LastLogin

        [Column(@"ApplicationId", Order = 4, TypeName = "bigint")]
        [Required]
        [Display(Name = "Application ID")]
        public long ApplicationId { get; set; } // ApplicationId

        [Column(@"UserAccountId", Order = 5, TypeName = "bigint")]
        [Index(@"IX_AKE_USA_iID", 1, IsUnique = false, IsClustered = false)]
        [Index(@"IX_AKE_USE_cID", 1, IsUnique = false, IsClustered = false)]
        [Display(Name = "User account ID")]
        public long? UserAccountId { get; set; } // UserAccountId

        [Column(@"USE_cID", Order = 6, TypeName = "uniqueidentifier")]
        [Display(Name = "Use c ID")]
        public System.Guid? UseCId { get; set; } // USE_cID

        // Foreign keys

        /// <summary>
        /// Parent Application pointed by [ApiKey].([ApplicationId]) (FK_AKE_ApiKeys_APP_Applications)
        /// </summary>
        [ForeignKey("ApplicationId")] public virtual Application Application { get; set; } // FK_AKE_ApiKeys_APP_Applications
        /// <summary>
        /// Parent UseUser pointed by [ApiKey].([UseCId]) (FK_ApiKey_USE_Users)
        /// </summary>
        [ForeignKey("UseCId")] public virtual UseUser UseUser { get; set; } // FK_ApiKey_USE_Users
        /// <summary>
        /// Parent UserAccount pointed by [ApiKey].([UserAccountId]) (FK_AKE_ApiKeys_USA_UserAccounts1)
        /// </summary>
        [ForeignKey("UserAccountId")] public virtual UserAccount UserAccount { get; set; } // FK_AKE_ApiKeys_USA_UserAccounts1
    }

}
// </auto-generated>
