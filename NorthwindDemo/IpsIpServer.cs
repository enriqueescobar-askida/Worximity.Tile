// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace NorthwindDemo
{

    // IPS_IpServers
    [Table("IPS_IpServers", Schema = "dbo")]
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class IpsIpServer
    {
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Column(@"IPS_iID", Order = 1, TypeName = "int")]
        [Index(@"PK_IPS_IpServers", 1, IsUnique = true, IsClustered = true)]
        [Required]
        [Key]
        [Display(Name = "Ips i ID")]
        public int IpsIId { get; set; } // IPS_iID (Primary key)

        [Column(@"IPS_cTag", Order = 2, TypeName = "nvarchar")]
        [MaxLength(50)]
        [StringLength(50)]
        [Display(Name = "Ips c tag")]
        public string IpsCTag { get; set; } // IPS_cTag (length: 50)

        [Column(@"IPS_cWebService", Order = 3, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c web service")]
        public string IpsCWebService { get; set; } // IPS_cWebService (length: 1024)

        [Column(@"IPS_cSignalRService", Order = 4, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c signal rs ervice")]
        public string IpsCSignalRService { get; set; } // IPS_cSignalRService (length: 1024)

        [Column(@"IPS_cFtpService", Order = 5, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c ftp service")]
        public string IpsCFtpService { get; set; } // IPS_cFtpService (length: 1024)

        [Column(@"IPS_cSqlIpAddress", Order = 6, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c sql ip address")]
        public string IpsCSqlIpAddress { get; set; } // IPS_cSqlIpAddress (length: 1024)

        [Column(@"IPS_cBasicSQLAuthentification", Order = 7, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c basic sqla uthentification")]
        public string IpsCBasicSqlAuthentification { get; set; } // IPS_cBasicSQLAuthentification (length: 1024)

        [Column(@"IPS_cConnectionString", Order = 8, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c connection string")]
        public string IpsCConnectionString { get; set; } // IPS_cConnectionString (length: 1024)

        [Column(@"IPS_cEntitiesConnectionString", Order = 9, TypeName = "nvarchar")]
        [MaxLength(1024)]
        [StringLength(1024)]
        [Display(Name = "Ips c entities connection string")]
        public string IpsCEntitiesConnectionString { get; set; } // IPS_cEntitiesConnectionString (length: 1024)

        [Column(@"IPS_cNewDatabaseSource", Order = 10, TypeName = "nvarchar(max)")]
        [Display(Name = "Ips c new database source")]
        public string IpsCNewDatabaseSource { get; set; } // IPS_cNewDatabaseSource

        [Column(@"IPS_bEnabled", Order = 11, TypeName = "bit")]
        [Required]
        [Display(Name = "Ips b enabled")]
        public bool IpsBEnabled { get; set; } // IPS_bEnabled

        public IpsIpServer()
        {
            IpsBEnabled = true;
        }
    }

}
// </auto-generated>
