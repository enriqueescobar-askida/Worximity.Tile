// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace NorthwindDemo.Interfaces
{

    using NorthwindDemo.Entities;

    public interface ITileboardLocatorContext : System.IDisposable
    {
        System.Data.Entity.DbSet<ApiKey> ApiKeys { get; set; } // ApiKey
        System.Data.Entity.DbSet<ApiRequestLog> ApiRequestLogs { get; set; } // ApiRequestLog
        System.Data.Entity.DbSet<Application> Applications { get; set; } // Application
        System.Data.Entity.DbSet<CliClient> CliClients { get; set; } // CLI_Clients
        System.Data.Entity.DbSet<Company> Companies { get; set; } // Company
        System.Data.Entity.DbSet<CseClientSensor> CseClientSensors { get; set; } // CSE_ClientSensors
        System.Data.Entity.DbSet<DonDomainName> DonDomainNames { get; set; } // DON_DomainName
        System.Data.Entity.DbSet<FdcFormDefinitionVersionClient> FdcFormDefinitionVersionClients { get; set; } // FDC_FormDefinitionVersionClients
        System.Data.Entity.DbSet<FdvFormDefinitionVersion> FdvFormDefinitionVersions { get; set; } // FDV_FormDefinitionVersions
        System.Data.Entity.DbSet<FodFormDefinition> FodFormDefinitions { get; set; } // FOD_FormDefinitions
        System.Data.Entity.DbSet<FstFormSyncTask> FstFormSyncTasks { get; set; } // FST_FormSyncTasks
        System.Data.Entity.DbSet<HfdHistoryFormDefinitionVersion> HfdHistoryFormDefinitionVersions { get; set; } // HFD_HistoryFormDefinitionVersions
        System.Data.Entity.DbSet<IpsIpServer> IpsIpServers { get; set; } // IPS_IpServers
        System.Data.Entity.DbSet<KitTemplate> KitTemplates { get; set; } // KitTemplate
        System.Data.Entity.DbSet<KitTemplateAttribute> KitTemplateAttributes { get; set; } // KitTemplateAttribute
        System.Data.Entity.DbSet<KitTemplateMeasureDefinition> KitTemplateMeasureDefinitions { get; set; } // KitTemplateMeasureDefinition
        System.Data.Entity.DbSet<LoeLogException> LoeLogExceptions { get; set; } // LOE_LogExceptions
        System.Data.Entity.DbSet<PrePreference> PrePreferences { get; set; } // PRE_Preferences
        System.Data.Entity.DbSet<Right> Rights { get; set; } // Right
        System.Data.Entity.DbSet<RightAction> RightActions { get; set; } // RightAction
        System.Data.Entity.DbSet<SerServer> SerServers { get; set; } // SER_Servers
        System.Data.Entity.DbSet<UnoUserNotice> UnoUserNotices { get; set; } // UNO_UserNotices
        System.Data.Entity.DbSet<UserAccount> UserAccounts { get; set; } // UserAccount
        System.Data.Entity.DbSet<UserAccountClient> UserAccountClients { get; set; } // UserAccountClient
        System.Data.Entity.DbSet<UserAccountGroup> UserAccountGroups { get; set; } // UserAccountGroup
        System.Data.Entity.DbSet<UseUser> UseUsers { get; set; } // USE_Users
        System.Data.Entity.DbSet<VerVersion> VerVersions { get; set; } // VER_Versions

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();

        // Stored Procedures
        int UseUpdateDev();
        // UseUpdateDevAsync cannot be created due to having out parameters, or is relying on the procedure result (int)


        // Table Valued Functions
    }

}
// </auto-generated>
