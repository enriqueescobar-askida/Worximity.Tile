// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace NorthwindDemo
{

    // UserAccount
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.31.1.0")]
    public class UserAccount
    {
        public long UserAccountId { get; set; } // UserAccountId (Primary key)
        public System.DateTime Created { get; set; } // Created
        public System.DateTime LastModified { get; set; } // LastModified
        public System.DateTime? Deleted { get; set; } // Deleted
        public string Email { get; set; } // Email (length: 100)
        public string Password { get; set; } // Password (length: 250)
        public bool MustChangePassword { get; set; } // MustChangePassword
        public string FirstName { get; set; } // FirstName (length: 100)
        public string LastName { get; set; } // LastName (length: 100)
        public string PhoneNumber { get; set; } // PhoneNumber (length: 50)
        public string Address { get; set; } // Address (length: 100)
        public string City { get; set; } // City (length: 100)
        public string State { get; set; } // State (length: 100)
        public string Country { get; set; } // Country (length: 100)
        public string PostalCode { get; set; } // PostalCode (length: 50)
        public System.Guid? EmailRegistrationToken { get; set; } // EmailRegistrationToken
        public System.Guid? ForgottenPasswordToken { get; set; } // ForgottenPasswordToken
        public System.DateTime? ForgottenPasswordCreatedDate { get; set; } // ForgottenPasswordCreatedDate
        public bool EmailRegistered { get; set; } // EmailRegistered
        public bool SystemUser { get; set; } // SystemUser
        public bool Active { get; set; } // Active
        public long? CompanyId { get; set; } // CompanyId
        public long? UserAccountGroupId { get; set; } // UserAccountGroupId
        public string TempPassword { get; set; } // TempPassword (length: 250)
        public bool IsDev { get; set; } // IsDev
        public bool ResetCache { get; set; } // ResetCache
        public bool UploadFormImages { get; set; } // UploadFormImages
        public bool CanImpersonate { get; set; } // CanImpersonate

        // Reverse navigation

        /// <summary>
        /// Child ApiKeys where [ApiKey].[UserAccountId] point to this entity (FK_AKE_ApiKeys_USA_UserAccounts1)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ApiKey> ApiKeys { get; set; } // ApiKey.FK_AKE_ApiKeys_USA_UserAccounts1
        /// <summary>
        /// Child ApiRequestLogs where [ApiRequestLog].[UserAccountId] point to this entity (FK_ApiRequest_UserAccount)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ApiRequestLog> ApiRequestLogs { get; set; } // ApiRequestLog.FK_ApiRequest_UserAccount
        /// <summary>
        /// Child UserAccountClients where [UserAccountClient].[UserAccountId] point to this entity (FK_UAC_UserAccountClients_USA_UserAccounts)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UserAccountClient> UserAccountClients { get; set; } // UserAccountClient.FK_UAC_UserAccountClients_USA_UserAccounts

        // Foreign keys

        /// <summary>
        /// Parent Company pointed by [UserAccount].([CompanyId]) (FK_USA_UserAccounts_USC_Company)
        /// </summary>
        public virtual Company Company { get; set; } // FK_USA_UserAccounts_USC_Company
        /// <summary>
        /// Parent UserAccountGroup pointed by [UserAccount].([UserAccountGroupId]) (FK_USA_UserAccounts_UAG_UserAccountGroups)
        /// </summary>
        public virtual UserAccountGroup UserAccountGroup { get; set; } // FK_USA_UserAccounts_UAG_UserAccountGroups

        public UserAccount()
        {
            MustChangePassword = true;
            EmailRegistered = false;
            SystemUser = false;
            Active = true;
            IsDev = false;
            ResetCache = false;
            UploadFormImages = false;
            CanImpersonate = false;
            ApiKeys = new System.Collections.Generic.List<ApiKey>();
            ApiRequestLogs = new System.Collections.Generic.List<ApiRequestLog>();
            UserAccountClients = new System.Collections.Generic.List<UserAccountClient>();
        }
    }

}
// </auto-generated>
